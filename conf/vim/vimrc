" Autoload configuration
autocmd! BufWritePost ~/.vimrc source %

" This option has the effect of making Vim either more Vi-compatible, or
" make Vim behave in a more useful way.
set nocompatible

" The command-lines that you enter are remembered in a history table.
set history=50

" When a file has been detected to have been changed outside of Vim and
" it has not been changed inside of Vim, automatically read it again.
set autoread

" Precede each line with its line number.
set number

" Enable the use of the mouse.
set mouse=a

" Minimal number of screen lines to keep above and below the cursor.
set scrolloff=10

" When set case is ignored when completing file names and directories.
set wildmenu

" A file that matches with one of these patterns is ignored when expanding
" "wildcards", completing file or directory names, and influences the
" result of "expand()", "glob()" and "globpath()" unless a flag is passed
" to disable this.
set wildignore=*.o,*~,*.pyc

" Show the line and column number of the cursor position, separated by a
" comma.
set ruler

" Number of screen lines to use for the command-line.
set cmdheight=2

" When off a buffer is unloaded when it is "abandon" ed.
set hidden

" Influences the working of <BS>, <Del>, CTRL-W and CTRL-U in Insert
" mode.
set backspace=eol,start,indent

" Allow specified keys that move the cursor left/right to move to the
" previous/next line when the cursor is on the first/last character in
" the line.
"set whichwrap+=<,>,h,l
set whichwrap+=<,>

" Ignore case in search patterns.  Also used when searching in the tags
" file.
set ignorecase

" Override the 'ignorecase' option if the search pattern contains upper
" case characters.
set smartcase

" When there is a previous search pattern, highlight all its matches.
set hlsearch

" While typing a search command, show where the pattern, as it was typed
" so far, matches.
set incsearch

" Searches wrap around the end of the file.
set nowrapscan

" When this option is set, the screen will not be redrawn while
" executing macros, registers and other commands that have not been
" typed.
set lazyredraw

" Changes the special characters that can be used in search patterns.
set magic

" When a bracket is inserted, briefly jump to the matching one.
set showmatch

" Highlight the screen line of the cursor with CursorLine "hl-CursorLine".
"set cursorline

" Tenths of a second to show the matching paren, when 'showmatch' is
" set.
set matchtime=2

" Ring the bell (beep or screen flash) for error messages.
set noerrorbells

" Use visual bell instead of beeping.
set novisualbell

" Terminal option: visual bell
set t_vb=

" The time in milliseconds that is waited for a key code or mapped key
" sequence to complete.
set timeoutlen=500

" Syntax highlighting enables Vim to show parts of the text in another
" font or color.
syntax enable

" Load color scheme
colorscheme desert

" When set to "dark", Vim will try to use colors that look good on a
" dark background.  When set to "light", Vim will try to use colors that
" look good on a light background.
set background=dark

" Specifies spelling checking on
set spell

if has("gui_running")

    " A sequence of letters which describes what components and options
    " of the GUI should be used.
    set guioptions=

    " Terminal option: number of colors
    set t_Co=256

    " When nonempty describes the text to use in a label of the GUI tab
    " pages line.
    set guitablabel=%M\ %t

    " List of fonts which will be used for GUI
    set guifont=Monospace\ 14

    " Number of columns of the screen.
    set columns=120

    " Load color scheme for GUI
    colorscheme ir_black

    " Number of lines of the Vim window.
    set lines=50
else
    " Specifies the styling of mis-spellings
    hi clear SpellBad
    hi SpellBad cterm=underline
endif

" Sets the character encoding used inside Vim.
set encoding=utf8

" Sets the character encoding for the file of this buffer.
set fileencoding=utf8

" This is a list of character encodings considered when starting to edit
" an existing file.
set fileencodings=utf8,gbk

" This gives the <EOL> of the current buffer, which is used for
" reading/writing the buffer from/to a file
set fileformat=unix

" This gives the end-of-line (<EOL>) formats that will be tried when
" starting to edit a new buffer and when reading a file into an existing
" buffer.
set fileformats=unix

" The kind of folding used for the current window.
set foldmethod=marker

" A comma separated list of screen columns that are
" highlighted with ColorColumn "hl-ColorColumn".
set colorcolumn=80

" Make a backup before overwriting a file.  Leave it around after the
" file has been successfully written.
set nobackup

" Make a backup before overwriting a file.  The backup is removed after
" the file was successfully written, unless the 'backup' option is
" also on.
set nowritebackup

" Use a swapfile for the buffer.
set noswapfile

" In Insert mode: Use the appropriate number of spaces to insert a
" <Tab>.
set expandtab

" When on, a <Tab> in front of a line inserts blanks according to
" 'shiftwidth'.  'tabstop' or 'softtabstop' is used in other places.
set smarttab

" Number of spaces to use for each step of (auto)indent.
set shiftwidth=4

" Number of spaces that a <Tab> in the file counts for.
set tabstop=4

" Number of spaces that a <Tab> counts for while performing editing
" operations, like inserting a <Tab> or using <BS>.
set softtabstop=4

" If on Vim will wrap long lines at a character in 'breakat' rather
" than at the last character that fits on the screen.
set linebreak

" Maximum width of text that is being inserted.
set textwidth=500

" Copy indent from current line when starting a new line (typing <CR>
" in Insert mode or when using the "o" or "O" command).
set autoindent

" Do smart autoindenting when starting a new line.
set smartindent

" When on, lines longer than the width of the window will wrap and
" displaying continues on the next line.
set wrap

" Specifies the key sequence that toggles the 'paste' option
set pastetoggle=<F3>

" Disable "expandtab" while editing a make file
if expand("%:t") =~ "Makefile" || expand("%:t") =~ "makefile" || expand("%:e") =~ "ws"
    set noexpandtab
endif
